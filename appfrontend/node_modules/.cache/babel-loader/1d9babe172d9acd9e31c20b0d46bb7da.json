{"ast":null,"code":"var _jsxFileName = \"G:\\\\blockchain-scm\\\\appfrontend\\\\src\\\\components\\\\BatchTable.js\";\nimport React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n/**\r\n * Component to render tables. \r\n * Takes row and column details as input props.\r\n * \r\n * @author syuki\r\n */\nexport default class BatchTable extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      page: 0,\n      rowsPerPage: 5\n    };\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        page: newPage\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(Paper, {\n      elevation: 0,\n      style: {\n        minHeight: 450\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      style: {\n        minHeight: 420\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, this.props.cols.map(col => /*#__PURE__*/React.createElement(TableCell, {\n      key: col.field,\n      align: col.align,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }\n    }, col.title.toUpperCase())))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }\n    }, this.props.rows.length > 0 ? this.props.rows.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(row => /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      tabIndex: -1,\n      key: row.productId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      align: \"left\",\n      width: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 45\n      }\n    }, row.productId), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      width: \"20%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 45\n      }\n    }, row.productName), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"left\",\n      width: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 45\n      }\n    }, row.productStatus), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      width: \"20%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      disabled: row.disableActionButton,\n      onClick: () => this.props.showConfirmActionPopUp(row.action, row.productId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 49\n      }\n    }, row.action)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      width: \"20%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: () => this.props.toggleBatchDetailsPopUp(row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 49\n      }\n    }, \"View Details\")))) : /*#__PURE__*/React.createElement(TableRow, {\n      tabIndex: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      colSpan: 6,\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    }, this.props.emptyRowsMessage))))), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [5],\n      component: \"div\",\n      count: this.props.rows.length,\n      rowsPerPage: this.state.rowsPerPage,\n      page: this.state.page,\n      onPageChange: this.handleChangePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }));\n  }\n}\n;","map":{"version":3,"names":["React","Button","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Paper","BatchTable","Component","state","page","rowsPerPage","handleChangePage","event","newPage","setState","render","minHeight","props","cols","map","col","field","align","title","toUpperCase","rows","length","slice","row","productId","productName","productStatus","disableActionButton","showConfirmActionPopUp","action","toggleBatchDetailsPopUp","emptyRowsMessage"],"sources":["G:/blockchain-scm/appfrontend/src/components/BatchTable.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n/**\r\n * Component to render tables. \r\n * Takes row and column details as input props.\r\n * \r\n * @author syuki\r\n */\r\nexport default class BatchTable extends React.Component {\r\n\r\n    state = { \r\n        page: 0, \r\n        rowsPerPage: 5,\r\n      };\r\n\r\n      handleChangePage = (event, newPage) => {\r\n        this.setState({ page: newPage });\r\n      };\r\n\r\n    render() {\r\n        return(\r\n            <Paper elevation={0} style={{ minHeight: 450 }}>\r\n                <TableContainer style={{ minHeight: 420 }}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead color=\"primary\">\r\n                            <TableRow color=\"primary\">\r\n                                {\r\n                                    this.props.cols.map((col) => (\r\n                                        <TableCell key={col.field} align={col.align}>{col.title.toUpperCase()}</TableCell>\r\n                                    ))\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                this.props.rows.length > 0 ? \r\n                                    this.props.rows\r\n                                    .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\r\n                                    .map((row) => (\r\n                                        <TableRow\r\n                                            hover\r\n                                            tabIndex={-1}\r\n                                            key={row.productId}\r\n                                        >\r\n                                            <TableCell component=\"th\" scope=\"row\" align=\"left\" width=\"10%\">{row.productId}</TableCell>\r\n                                            <TableCell align=\"left\" width=\"20%\">{row.productName}</TableCell> \r\n                                            <TableCell align=\"left\" width=\"10%\">{row.productStatus}</TableCell>\r\n                                            <TableCell align=\"center\" width=\"20%\">\r\n                                                <Button \r\n                                                    variant=\"outlined\" \r\n                                                    color='secondary' \r\n                                                    disabled={row.disableActionButton}\r\n                                                    onClick={() => this.props.showConfirmActionPopUp(row.action, row.productId)}>{row.action}</Button>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" width=\"20%\">\r\n                                                <Button \r\n                                                    variant=\"outlined\" \r\n                                                    color='secondary' \r\n                                                    onClick={() => this.props.toggleBatchDetailsPopUp(row)}>View Details</Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )) \r\n                                : \r\n                                <TableRow tabIndex={-1}>\r\n                                    <TableCell \r\n                                        colSpan={6} \r\n                                        align=\"center\">\r\n                                        {this.props.emptyRowsMessage}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5]}\r\n                    component=\"div\"\r\n                    count={this.props.rows.length}\r\n                    rowsPerPage={this.state.rowsPerPage}\r\n                    page={this.state.page}\r\n                    onPageChange={this.handleChangePage}\r\n                />\r\n            </Paper>\r\n        );\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}