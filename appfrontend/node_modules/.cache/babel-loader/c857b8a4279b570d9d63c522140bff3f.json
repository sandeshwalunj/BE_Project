{"ast":null,"code":"var _jsxFileName = \"G:\\\\blockchain-scm\\\\appfrontend\\\\src\\\\components\\\\static\\\\Header.js\";\nimport React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { USER_TYPES } from '../enum/UsersEnum';\nimport Profile from '../Profile';\nimport '../../css/App.css';\n\n/**\r\n * Header component. Present in every page when user is an authenticated one.\r\n * \r\n * @author syuki\r\n */\nexport default function Header(_ref) {\n  let {\n    isAuthenticated,\n    userType,\n    drizzle,\n    drizzleState\n  } = _ref;\n  const [showProfile, setShowProfile] = useState();\n  const [anchorEl, setAnchorEl] = useState();\n  const [profilePicture, setProfilePicture] = useState();\n  const [profilePicture1, setProfilePicture1] = useState();\n  const [profiletext, setProfiletext] = useState('');\n  function toggleProfile(event) {\n    let profilePicturePath = \"/profile-designs/Producer.png\";\n    if (userType == USER_TYPES[1]) {\n      profilePicturePath = \"/profile-designs/Distributor.png\";\n    }\n    if (userType == USER_TYPES[2]) {\n      profilePicturePath = \"/profile-designs/Retailer.png\";\n    }\n    setProfilePicture(profilePicturePath);\n    setShowProfile(!showProfile);\n    setAnchorEl(event.currentTarget);\n  }\n  useEffect(() => {\n    let profilePicturePath1 = \"/profile-designs/Producer.png\";\n    let profiletxt = 'Producer';\n    if (userType == USER_TYPES[1]) {\n      profilePicturePath1 = \"/profile-designs/Distributor.png\";\n      profiletxt = 'Distributor';\n    }\n    if (userType == USER_TYPES[2]) {\n      profilePicturePath1 = \"/profile-designs/Retailer.png\";\n      profiletxt = 'Retailer';\n    }\n    setProfilePicture1(profilePicturePath1);\n    setProfiletext(profiletxt);\n  }, []);\n  if (!isAuthenticated) {\n    return null;\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      color: \"secondary\",\n      elevation: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      to: \"/\",\n      className: \"undecorated-links\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: profilePicture1,\n      style: {\n        border: '2px solid rgba(255, 255, 255, 2)',\n        borderRadius: '50%',\n        margin: '5px'\n      },\n      alt: \"logo\",\n      id: \"app-logo-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      sx: {\n        textDecoration: 'underline'\n      },\n      noWrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, profiletext))), /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      to: \"/\",\n      className: \"undecorated-links iconbutton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      id: \"right-anchored-menu-item\",\n      onClick: toggleProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AccountCircle, {\n      style: {\n        fontSize: 40\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n      className: \"dropdown-arrow-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    })))), showProfile ? /*#__PURE__*/React.createElement(Profile, {\n      open: showProfile,\n      close: toggleProfile,\n      userType: userType,\n      drizzle: drizzle,\n      drizzleState: drizzleState,\n      anchorEl: anchorEl,\n      profilePicturePath: profilePicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }) : null);\n  }\n}\n;","map":{"version":3,"names":["React","useEffect","useState","NavLink","AppBar","Toolbar","IconButton","Typography","AccountCircle","ArrowDropDownIcon","USER_TYPES","Profile","Header","isAuthenticated","userType","drizzle","drizzleState","showProfile","setShowProfile","anchorEl","setAnchorEl","profilePicture","setProfilePicture","profilePicture1","setProfilePicture1","profiletext","setProfiletext","toggleProfile","event","profilePicturePath","currentTarget","profilePicturePath1","profiletxt","border","borderRadius","margin","textDecoration","fontSize"],"sources":["G:/blockchain-scm/appfrontend/src/components/static/Header.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';  \r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';  \r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nimport { USER_TYPES } from '../enum/UsersEnum';\r\n\r\nimport Profile from '../Profile';\r\n\r\nimport '../../css/App.css';\r\n\r\n/**\r\n * Header component. Present in every page when user is an authenticated one.\r\n * \r\n * @author syuki\r\n */\r\nexport default function Header({isAuthenticated, userType, drizzle, drizzleState}) {\r\n\r\n    const [showProfile, setShowProfile] = useState();\r\n    const [anchorEl, setAnchorEl] = useState();\r\n    const [profilePicture, setProfilePicture] = useState();\r\n    const [profilePicture1,setProfilePicture1]=useState()\r\n    const [profiletext,setProfiletext]=useState('');\r\n\r\n    function toggleProfile(event) {\r\n        let profilePicturePath = \"/profile-designs/Producer.png\";\r\n        if(userType == USER_TYPES[1]){\r\n            profilePicturePath = \"/profile-designs/Distributor.png\";\r\n        } \r\n        if(userType == USER_TYPES[2]){\r\n            profilePicturePath = \"/profile-designs/Retailer.png\";\r\n        } \r\n        setProfilePicture(profilePicturePath);\r\n        setShowProfile(!showProfile);\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n    useEffect(() => {\r\n        let profilePicturePath1 = \"/profile-designs/Producer.png\";\r\n        let profiletxt='Producer';\r\n        if(userType == USER_TYPES[1]){\r\n            profilePicturePath1 = \"/profile-designs/Distributor.png\";\r\n            profiletxt='Distributor';\r\n        } \r\n        if(userType == USER_TYPES[2]){\r\n            profilePicturePath1 = \"/profile-designs/Retailer.png\";\r\n            profiletxt='Retailer';\r\n        } \r\n        setProfilePicture1(profilePicturePath1);\r\n        setProfiletext(profiletxt)\r\n      }, []);\r\n\r\n\r\n    if(!isAuthenticated){\r\n        return null;\r\n    } else {\r\n        return(\r\n            <div> \r\n                <AppBar position=\"static\" color=\"secondary\" elevation={0}>\r\n                    <Toolbar> \r\n                        <NavLink exact to=\"/\" className=\"undecorated-links\"> \r\n                            <IconButton color=\"inherit\" >\r\n                                <img src={profilePicture1} style={{border:'2px solid rgba(255, 255, 255, 2)', borderRadius:'50%',margin:'5px' }} alt=\"logo\" id=\"app-logo-header\"/>\r\n                                <Typography variant='h6' sx={{textDecoration: 'underline'}} noWrap>{profiletext}</Typography>  \r\n                            </IconButton>\r\n                        </NavLink>\r\n                        <NavLink exact to=\"/\" className=\"undecorated-links iconbutton\"> \r\n                            <IconButton color=\"inherit\">\r\n                            </IconButton>\r\n                        </NavLink>\r\n                        <IconButton color=\"inherit\" id=\"right-anchored-menu-item\" onClick={toggleProfile}>\r\n                            <AccountCircle style={{ fontSize: 40 }}/> \r\n                            <ArrowDropDownIcon className=\"dropdown-arrow-icon\" />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                {showProfile ? \r\n                    <Profile \r\n                        open={showProfile} \r\n                        close={toggleProfile}\r\n                        userType={userType} \r\n                        drizzle={drizzle} \r\n                        drizzleState={drizzleState}\r\n                        anchorEl={anchorEl}\r\n                        profilePicturePath={profilePicture}\r\n                    />\r\n                    : null\r\n                }   \r\n            </div>\r\n        );\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}