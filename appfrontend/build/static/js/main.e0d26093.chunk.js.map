{"version":3,"sources":["drizzleOptions.js","components/static/PageLoader.js","components/enum/ProductStatusEnum.js","components/enum/UsersEnum.js","components/ProductBatchForm.js","components/ProductDetails.js","components/PerformStatusAction.js","components/BatchTable.js","components/ToastMessage.js","components/TabPanel.js","components/ErrorBoundary.js","components/static/CircularPageLoader.js","components/Home.js","components/wrapper/HomeWrapper.js","components/Register.js","components/ConfirmRegistration.js","components/Profile.js","components/static/Header.js","components/static/Footer.js","components/static/NotFound.js","components/static/NewUser.js","components/static/RegistrationSuccess.js","components/static/RegistrationFailure.js","components/InitializedContent.js","App.js","serviceWorker.js","index.js"],"names":["options","web3","block","fallback","type","url","contracts","SupplyChainLifecycle","events","PageLoader","Backdrop","open","className","Box","src","alt","id","Typography","variant","color","LinearProgress","PRODUCT_STATUSES","0","1","2","3","4","5","6","7","STATUS_ACTIONS","USER_TYPES","ProductBatchForm","state","prodName","prodDesc","prodPrice","prodQty","currency","unit","productPrice","event","preventDefault","this","props","showLoaderScreen","formData","updatedPrice","addZeroesForDecimals","contractName","methods","produceProduct","parseInt","currentAddress","send","from","gas","then","receipt","setTransactionSuccess","console","log","hideLoaderScreen","closePopup","catch","error","input","name","target","newValue","value","setState","Dialog","aria-labelledby","aria-describedby","fullWidth","onClose","scroll","DialogTitle","onSubmit","createProductBatch","DialogContent","dividers","DialogContentText","ref","tabIndex","Grid","container","justifyContent","direction","spacing","item","xs","style","TextField","required","onChange","handleInput","InputLabelProps","label","multiline","inputProps","min","step","InputProps","endAdornment","InputAdornment","position","pattern","paddingBottom","paddingTop","DialogActions","Button","onClick","React","Component","ProductDetails","productDetails","product","height","justify","fontWeight","productId","productName","whiteSpace","productDesc","productQuantity","productStatus","PerformStatusAction","action","method","contractMethod","getActionSpecificMethod","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","toCamelCase","confirmAction","bind","BatchTable","page","rowsPerPage","handleChangePage","newPage","Paper","elevation","minHeight","TableContainer","Table","aria-label","TableHead","TableRow","cols","map","col","TableCell","key","field","align","title","TableBody","rows","length","slice","row","hover","component","scope","width","disabled","disableActionButton","showConfirmActionPopUp","toggleBatchDetailsPopUp","colSpan","emptyRowsMessage","TablePagination","rowsPerPageOptions","count","onPageChange","ToastMessage","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","closeToastMessage","SnackbarContent","message","toastMessage","backgroundColor","bgColor","IconButton","size","fontSize","TabPanel","children","index","other","p","ErrorBoundary","promiseRejectionHandler","hasError","hideDialog","info","window","addEventListener","removeEventListener","CircularPageLoader","zIndex","CircularProgress","numeric","Home","tabValue","dataKey","showAddBatch","showConfirmAction","showBatchDetails","showLoader","productRow","actionState","transactionSuccess","retailerDataKey","isAuthenticated","addressZero","drizzle","getAllProductDetails","cacheCall","drizzleState","disable","statusAction","userType","productStatuses","number","productDetailsArray","forEach","status","fetchProductStatuses","fetchProductStatusActions","newRow","convertToDecimal","consumerAddress","currentUser","distributorAddress","producerAddress","retailerAddresses","push","filter","reverse","prodId","prodRow","newTabValue","string","isSuccessfullyRegistered","updateAuth","newUserType","updateUserType","getLifeCycleContract","getProductDetails","activeBatches","fetchActiveBatches","previousBatches","fetchPreviousBatches","AppBar","Tabs","TabIndicatorProps","background","handleTabChange","Tab","showAddBatchPopUp","paddingRight","fetchEmptyTableString","hideLoader","hideAddBatchPopUp","accounts","hideConfirmActionPopUp","to","HomeWrapper","location","useLocation","auth","Register","navigate","useNavigate","accountAddress","useEffect","Tooltip","arrow","placement","marginBottom","Divider","Link","href","ConfirmRegistration","useState","setShowLoader","getContractMethod","close","anchorEl","profilePicturePath","Menu","keepMounted","disableScrollLock","PaperProps","transform","padding","borderColor","accountBalances","Header","showProfile","setShowProfile","setAnchorEl","profilePicture","setProfilePicture","toggleProfile","currentTarget","Toolbar","exact","noWrap","Footer","Container","maxWidth","NotFound","NewUser","RegistrationSuccess","setTimeout","RegistrationFailure","InitializedContent","isAuth","setIsAuth","setUserType","contract","retailerResult","producerResult","isRetailer","call","isProducer","isDistributor","undefined","path","element","newIsAuth","Drizzle","drizzleOptions","App","Provider","Consumer","drizzleContext","initialized","Boolean","hostname","match","i","theme","createTheme","typography","fontFamily","join","palette","default","text","primary","secondary","main","warning","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","ethereum","on","reload","history","replaceState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0d26093.chunk.js","sourcesContent":["import SupplyChainLifecycle from \"./contracts/SupplyChainLifecycle.json\";\r\nimport Web3 from 'web3';\r\n \r\n\r\nconst options = {\r\n    web3: {\r\n        // customProvider: new Web3('ws://localhost:8545'),\r\n        block: false,\r\n        fallback: {\r\n            type: \"ws\",\r\n            url: \"ws://localhost:8545\"\r\n        }\r\n    },\r\n    contracts: [SupplyChainLifecycle],\r\n    events: {\r\n        SupplyChainLifecycle: [\"Produced\",\"ReadyForPickup\",\"PickedUp\",\"Sold\",\"ShipmentReleased\",\"ShipmentReceived\",\"ReadyForSale\",\"Paid\"],\r\n    }\r\n};\r\n\r\nexport default options;\r\n","import React from \"react\"; \r\n\r\nimport LinearProgress  from '@material-ui/core/LinearProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport '../../css/App.css';\r\n\r\n/**  \r\n * A linear progress bar loader.\r\n * \r\n * @author syuki\r\n*/\r\nexport const PageLoader = () => (\r\n    <div> \r\n        <Backdrop open className=\"backdrop-design\">\r\n            <center>\r\n                <Box>\r\n                    <img src=\"/bscm_light_circle.png\" alt=\"logo\" id=\"app-logo\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <Typography variant=\"h7\" color=\"textSecondary\">Connecting to the chain. Please check your connection.</Typography>\r\n                    <br/>\r\n                    <br/>\r\n                    <LinearProgress color=\"secondary\" />   \r\n                </Box> \r\n            </center>\r\n        </Backdrop> \r\n    </div>\r\n) ","/**\r\n * An enum component for holding product status details.\r\n * \r\n * @author syuki\r\n */\r\n\r\n/**\r\n * Actions available to the party that's selling the product - all of these are indicators, not actions.\r\n */\r\nexport const PRODUCT_STATUSES = {\r\n    0: \"PRODUCED\",\r\n    1: \"READY FOR PICKUP\",\r\n    2: \"PICKED UP\",\r\n    3: \"SHIPMENT RELEASED\",\r\n    4: \"SHIPMENT RECEIVED\",\r\n    5: \"READY FOR SALE\",\r\n    6: \"PAID\",\r\n    7: \"SOLD\" \r\n};\r\n\r\n/**\r\n * Actions available to the parties involved based on product statuses.\r\n */\r\nexport const STATUS_ACTIONS = {\r\n    0: \"ENABLE PICKUP\",\r\n    1: \"PICK UP\",\r\n    2: \"SHIP\",\r\n    3: \"RECEIVE SHIPMENT\",\r\n    4: \"ENABLE FOR SALE\",\r\n    5: \"PAY\",\r\n    6: \"SELL\",\r\n    7: \"-\" //No action.\r\n};\r\n","/**\r\n * An enum component for holding user details.\r\n * \r\n * @author syuki\r\n */\r\n\r\n/**\r\n * All types of parties involved in this application.\r\n */\r\n export const USER_TYPES = {\r\n    0: \"PRODUCER\", \r\n    1: \"DISTRIBUTOR\",\r\n    2: \"RETAILER\"\r\n};","import React from \"react\"; \r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport \"../css/PopUpModal.css\";\r\n\r\n/**\r\n * Component to add new batch details to the blockchain by interacting with the contracts.\r\n * Takes these details as input from the user.\r\n * \r\n * @author syuki\r\n */\r\nexport default class ProductBatchForm extends React.Component {\r\n\r\n    state = { \r\n        prodName: null,\r\n        prodDesc: null,\r\n        prodPrice: null,\r\n        prodQty: null,\r\n        currency: \"₹\",\r\n        unit: \"Kg\"\r\n    };\r\n\r\n    addZeroesForDecimals(productPrice){\r\n        return productPrice * 100;\r\n    }\r\n\r\n    createProductBatch(event){\r\n        //Prevents reloading of the entire page after submission.\r\n        event.preventDefault();\r\n        this.props.showLoaderScreen();\r\n        let formData = this.state;\r\n        let updatedPrice = this.addZeroesForDecimals(formData.prodPrice);\r\n        this.props.contractName.methods.produceProduct(\r\n            formData.prodName,\r\n            formData.prodDesc,\r\n            parseInt(updatedPrice),\r\n            parseInt(formData.prodQty),\r\n            this.props.currentAddress\r\n        )\r\n        .send(\r\n            {\r\n                from: this.props.currentAddress,\r\n                gas: 1000000\r\n            }\r\n        )\r\n        .then((receipt) => {\r\n            this.props.setTransactionSuccess(true);\r\n            console.log(receipt);\r\n            this.props.hideLoaderScreen();\r\n            this.props.closePopup();\r\n        })\r\n        .catch((error) => {\r\n            this.props.setTransactionSuccess(false);\r\n            console.log(error);\r\n            this.props.hideLoaderScreen();\r\n            this.props.closePopup();\r\n          });\r\n    }\r\n\r\n    handleInput(input){\r\n        const name = input.target.name;\r\n        const newValue = input.target.value;\r\n        this.setState({ [name]: newValue });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Dialog\r\n                open={this.props.open}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n                fullWidth\r\n                onClose={this.props.closePopup}\r\n                scroll=\"paper\" \r\n                className=\"popup-modal\">\r\n                <center>\r\n                    <DialogTitle id=\"scroll-dialog-title\">Enter Batch Details</DialogTitle>\r\n                </center>\r\n                <form onSubmit={(event) => this.createProductBatch(event)} className=\"form-grid\"> \r\n                    <DialogContent dividers={true}>\r\n                        <DialogContentText\r\n                            id=\"scroll-dialog-description\"\r\n                            ref={null}\r\n                            tabIndex={-1}\r\n                        >\r\n                            <Grid \r\n                                container \r\n                                color=\"secondary\" \r\n                                justifyContent=\"center\" \r\n                                direction={'column'} \r\n                                spacing={2}\r\n                            >\r\n                                <Grid item xs={12} style={{ color: \"red\"}}>\r\n                                    <TextField \r\n                                        required \r\n                                        fullWidth \r\n                                        name=\"prodName\"\r\n                                        onChange={(event) => this.handleInput(event)}\r\n                                        InputLabelProps={{\r\n                                            style: {\r\n                                            color: 'grey'\r\n                                            } \r\n                                        }}\r\n                                        variant=\"outlined\" \r\n                                        label=\"Product Name\" />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField \r\n                                        required \r\n                                        fullWidth \r\n                                        multiline\r\n                                        name=\"prodDesc\"\r\n                                        onChange={(event) => this.handleInput(event)}\r\n                                        InputLabelProps={{\r\n                                            style: {\r\n                                                color: 'grey'\r\n                                            } \r\n                                        }}\r\n                                        variant=\"outlined\" \r\n                                        label=\"Product Description\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <br />\r\n                            <Grid \r\n                                container \r\n                                color=\"secondary\" \r\n                                className=\"form-grid\" \r\n                                // spacing={14}\r\n                                justifyContent=\"center\">\r\n                                <Grid item xs={6}>\r\n                                    <TextField \r\n                                        required \r\n                                        type=\"number\"\r\n                                        name=\"prodPrice\"\r\n                                        onChange={(event) => this.handleInput(event)}\r\n                                        InputLabelProps={{\r\n                                            style: {\r\n                                                color: 'grey'\r\n                                            } \r\n                                        }}\r\n                                        inputProps={{\r\n                                            min: 0.01,\r\n                                            step: 0.01,\r\n                                          }}\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\"> \r\n                                                    <div style={{ color: \"grey\"}}>₹</div>\r\n                                                </InputAdornment>),\r\n                                        }}\r\n                                        variant=\"outlined\" \r\n                                        label=\"Product Price\" />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField \r\n                                        required \r\n                                        name=\"prodQty\"\r\n                                        onChange={(event) => this.handleInput(event)}\r\n                                        type=\"number\"\r\n                                        InputLabelProps={{\r\n                                            min: 1,\r\n                                            pattern: \"[0-9]*\",\r\n                                            style: {\r\n                                                color: 'grey'\r\n                                            } \r\n                                        }}\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\"> \r\n                                                    <div style={{ color: \"grey\"}}>Kg</div>\r\n                                                </InputAdornment>),\r\n                                        }}\r\n                                        variant=\"outlined\" \r\n                                        label=\"Product Quantity\" />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <center>\r\n                        <div style={{ paddingBottom: \"10px\", paddingTop: \"10px\"}}>\r\n                            <DialogActions>\r\n                                <Grid \r\n                                    container \r\n                                    color=\"secondary\" \r\n                                    className=\"form-grid\"  \r\n                                    justifyContent=\"center\">\r\n                                    <Grid item xs={3}>\r\n                                        <Button \r\n                                            variant=\"outlined\" \r\n                                            className=\"nf-button\" \r\n                                            color=\"primary\" \r\n                                            onClick={this.props.closePopup}>Close</Button>\r\n                                    </Grid> \r\n                                    <Grid item xs={3}>\r\n                                        <Button \r\n                                            variant=\"contained\" \r\n                                            className=\"nf-button\" \r\n                                            color=\"primary\" \r\n                                            type=\"submit\">Produce</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </DialogActions>\r\n                        </div>\r\n                    </center>\r\n                </form>\r\n            </Dialog>\r\n        )\r\n    }\r\n};","import React from \"react\"; \r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport \"../css/PopUpModal.css\";\r\n\r\n/**\r\n * Renders product batch details.\r\n * \r\n * @author syuki\r\n */\r\nexport default class ProductDetails extends React.Component {\r\n\r\n    state = {\r\n        currency: \"₹\",\r\n        unit: \"Kg\"\r\n    }\r\n\r\n    render() {\r\n        const productDetails = this.props.product;\r\n        return(\r\n            <Dialog\r\n                open={this.props.open}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n                fullWidth\r\n                onClose={this.props.closePopup}\r\n                scroll=\"paper\" \r\n                className=\"popup-modal\"\r\n                style={{ height: \"1000px\"}}>\r\n                <center>\r\n                    <DialogTitle id=\"scroll-dialog-title\">Batch Details</DialogTitle>\r\n                </center>\r\n                <DialogContent dividers={true}>\r\n                    <DialogContentText\r\n                        id=\"scroll-dialog-description\"\r\n                        ref={null}\r\n                        tabIndex={-1}\r\n                        color=\"secondary\"\r\n                    >\r\n                        <Grid container color=\"secondary\" justify=\"flex-end\" spacing={1}>\r\n                            <Grid item xs={6} style={{ fontWeight: \"bold\"}}>\r\n                                Product ID \r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                {productDetails.productId} \r\n                            </Grid>\r\n                            <Grid item xs={6} style={{ fontWeight: \"bold\"}}>\r\n                                Product Name \r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                {productDetails.productName} \r\n                            </Grid>\r\n                            <Grid item xs={6} style={{ fontWeight: \"bold\"}} >\r\n                                Product Description\r\n                            </Grid>\r\n                            <Grid item xs style={{whiteSpace: 'pre-line'}} >\r\n                                    {productDetails.productDesc} \r\n                            </Grid>\r\n                            <Grid item xs={6} style={{ fontWeight: \"bold\"}}>\r\n                                Product Price\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                {productDetails.productPrice} {this.state.currency}\r\n                            </Grid>\r\n                            <Grid item xs={6} style={{ fontWeight: \"bold\"}}>\r\n                                Product Quantity\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                {productDetails.productQuantity} {this.state.unit}\r\n                            </Grid>\r\n                            <Grid item xs={6} style={{ fontWeight: \"bold\"}}>\r\n                                Product Status\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                {productDetails.productStatus}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <center>\r\n                    <DialogActions>\r\n                        <Grid \r\n                            container \r\n                            color=\"secondary\"  \r\n                            justifyContent=\"center\">\r\n                            <Grid item xs>\r\n                                <Button \r\n                                    variant=\"contained\" \r\n                                    className=\"nf-button\" \r\n                                    color=\"primary\" \r\n                                    onClick={this.props.closePopup}>Close</Button>\r\n                            </Grid> \r\n                        </Grid>\r\n                    </DialogActions>\r\n                </center>\r\n            </Dialog>\r\n        )\r\n    }\r\n};","import React from \"react\"; \r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport {STATUS_ACTIONS} from './enum/ProductStatusEnum';\r\n\r\nimport \"../css/PopUpModal.css\";\r\n\r\n/**\r\n * Component to update the status of a batch by interacting with the contracts. \r\n * Takes product ID and the action to be performed as input props.\r\n * \r\n * @author syuki\r\n */\r\nexport default class PerformStatusAction extends React.Component {\r\n\r\n    getActionSpecificMethod(action){\r\n        let method = null;\r\n        if(action != null && this.props.contractName != null){\r\n            switch(action) {\r\n                case STATUS_ACTIONS[0]:\r\n                    method = this.props.contractName.methods[\"markProductReadyForPickup\"];\r\n                    break;\r\n                case STATUS_ACTIONS[1]:\r\n                    method = this.props.contractName.methods[\"pickUpProduct\"];\r\n                    break;\r\n                case STATUS_ACTIONS[2]:\r\n                    method = this.props.contractName.methods[\"releaseProductShipment\"];\r\n                    break;\r\n                case STATUS_ACTIONS[3]:\r\n                    method = this.props.contractName.methods[\"receiveProductShipment\"];\r\n                    break;\r\n                case STATUS_ACTIONS[4]:\r\n                    method = this.props.contractName.methods[\"markProductReadyForSale\"];\r\n                    break;\r\n                case STATUS_ACTIONS[5]:\r\n                    method = this.props.contractName.methods[\"buyProduct\"];\r\n                    break;\r\n                case STATUS_ACTIONS[6]:\r\n                    method = this.props.contractName.methods[\"sellProductToConsumer\"];\r\n                    break;\r\n            }\r\n        }\r\n        return method;\r\n    }\r\n\r\n    confirmAction(){\r\n        this.props.showLoaderScreen();\r\n        const contractMethod = this.getActionSpecificMethod(this.props.action);\r\n        if(contractMethod != null){\r\n            contractMethod(\r\n                this.props.productId\r\n            )\r\n            .send(\r\n                {\r\n                    from: this.props.currentAddress,\r\n                    gas: 1000000\r\n                } \r\n            )\r\n            .then((receipt) => {\r\n                this.props.setTransactionSuccess(true);\r\n                console.log(receipt);\r\n                this.props.hideLoaderScreen();\r\n                this.props.closePopup();\r\n            })\r\n            .catch((error) => {\r\n                this.props.setTransactionSuccess(false);\r\n                console.log(error);\r\n                this.props.hideLoaderScreen();\r\n                this.props.closePopup();\r\n            });\r\n        }\r\n        else {\r\n            this.props.setTransactionSuccess(false);\r\n            this.props.hideLoaderScreen();\r\n            this.props.closePopup();\r\n        }\r\n    }\r\n\r\n    toCamelCase(str) {\r\n        return str.replace(\r\n            /\\w\\S*/g,\r\n            function(txt) {\r\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Dialog\r\n            open={this.props.open}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n            fullWidth\r\n            onClose={this.props.closePopup}\r\n            scroll=\"paper\" \r\n            className=\"popup-modal\">\r\n                <div style={{ paddingBottom: \"20px\"}}>\r\n                    <center>\r\n                        <DialogTitle id=\"scroll-dialog-title\">Confirm {this.toCamelCase(this.props.action)}?</DialogTitle>\r\n                        <DialogActions>\r\n                            <Grid container color=\"secondary\" className=\"form-grid\"  justifyContent=\"center\" >\r\n                                <Grid item xs={3}>\r\n                                    <Button variant=\"outlined\" className=\"nf-button\" color=\"primary\" onClick={this.props.closePopup}>Close</Button>\r\n                                </Grid> \r\n                                <Grid item xs={3}>\r\n                                    <Button variant=\"contained\" className=\"nf-button\" color=\"primary\" onClick={this.confirmAction.bind(this)}>Confirm</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogActions>\r\n                    </center>\r\n                </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n};","import React from \"react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n/**\r\n * Component to render tables. \r\n * Takes row and column details as input props.\r\n * \r\n * @author syuki\r\n */\r\nexport default class BatchTable extends React.Component {\r\n\r\n    state = { \r\n        page: 0, \r\n        rowsPerPage: 5,\r\n      };\r\n\r\n      handleChangePage = (event, newPage) => {\r\n        this.setState({ page: newPage });\r\n      };\r\n\r\n    render() {\r\n        return(\r\n            <Paper elevation={0} style={{ minHeight: 450 }}>\r\n                <TableContainer style={{ minHeight: 420 }}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead color=\"primary\">\r\n                            <TableRow color=\"primary\">\r\n                                {\r\n                                    this.props.cols.map((col) => (\r\n                                        <TableCell key={col.field} align={col.align}>{col.title.toUpperCase()}</TableCell>\r\n                                    ))\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                this.props.rows.length > 0 ? \r\n                                    this.props.rows\r\n                                    .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\r\n                                    .map((row) => (\r\n                                        <TableRow\r\n                                            hover\r\n                                            tabIndex={-1}\r\n                                            key={row.productId}\r\n                                        >\r\n                                            <TableCell component=\"th\" scope=\"row\" align=\"left\" width=\"10%\">{row.productId}</TableCell>\r\n                                            <TableCell align=\"left\" width=\"20%\">{row.productName}</TableCell> \r\n                                            <TableCell align=\"left\" width=\"10%\">{row.productStatus}</TableCell>\r\n                                            <TableCell align=\"center\" width=\"20%\">\r\n                                                <Button \r\n                                                    variant=\"outlined\" \r\n                                                    color='secondary' \r\n                                                    disabled={row.disableActionButton}\r\n                                                    onClick={() => this.props.showConfirmActionPopUp(row.action, row.productId)}>{row.action}</Button>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" width=\"20%\">\r\n                                                <Button \r\n                                                    variant=\"outlined\" \r\n                                                    color='secondary' \r\n                                                    onClick={() => this.props.toggleBatchDetailsPopUp(row)}>View Details</Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )) \r\n                                : \r\n                                <TableRow tabIndex={-1}>\r\n                                    <TableCell \r\n                                        colSpan={6} \r\n                                        align=\"center\">\r\n                                        {this.props.emptyRowsMessage}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5]}\r\n                    component=\"div\"\r\n                    count={this.props.rows.length}\r\n                    rowsPerPage={this.state.rowsPerPage}\r\n                    page={this.state.page}\r\n                    onPageChange={this.handleChangePage}\r\n                />\r\n            </Paper>\r\n        );\r\n    }\r\n};\r\n","import React from \"react\"; \r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n/**\r\n * Component to show a toast/snackbar at the bottom of the screen after every transaction.\r\n * \r\n * @author syuki\r\n */\r\nexport default class ToastMessage extends React.Component {\r\n    render() {\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                open={this.props.open}\r\n                autoHideDuration={3000}\r\n                onClose={() => this.props.closeToastMessage()}\r\n            >\r\n                <SnackbarContent \r\n                    message={this.props.toastMessage}\r\n                    style={{\r\n                        backgroundColor:this.props.bgColor,\r\n                    }}\r\n                    action= {\r\n                          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => this.props.closeToastMessage()}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                      }\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n};","import React from \"react\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n/**\r\n * Component to handle tabs.\r\n * \r\n * @author syuki\r\n */\r\nexport default function  TabPanel(props) {\r\n    const { children, value, index, count, ...other } = props;\r\n  \r\n    return (\r\n      <div {...other}>\r\n        {value === index && <Box p={count}>{children}</Box>}\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\n\r\n/**\r\n * Generic error handling component.\r\n * Triggers an error toast.\r\n * \r\n * @author syuki\r\n */\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            hasError: false\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) {\r\n        this.props.setTransactionSuccess(false);\r\n        this.props.hideLoaderScreen();\r\n        this.props.hideDialog();\r\n        return { hasError: true };\r\n      }\r\n\r\n    promiseRejectionHandler = (event) => {\r\n        this.setState({\r\n            hasError: true,\r\n        });\r\n        this.props.setTransactionSuccess(false);\r\n        this.props.hideLoaderScreen();\r\n        this.props.hideDialog();\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({\r\n            hasError: true,\r\n        });\r\n        this.props.setTransactionSuccess(false);\r\n        this.props.hideLoaderScreen();\r\n        this.props.hideDialog();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('unhandledrejection', this.promiseRejectionHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.promiseRejectionHandler);\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.hasError) {\r\n            return ('');\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;  ","import React from \"react\"; \r\n\r\nimport CircularProgress  from '@material-ui/core/CircularProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nimport '../../css/App.css';\r\n\r\n/**  \r\n * A transparent circular page loader.\r\n * \r\n * @author syuki\r\n*/\r\nexport const CircularPageLoader = (props) => (\r\n    <div> \r\n        <Backdrop\r\n            open={props.open} \r\n            style={{  \r\n                zIndex: 2000\r\n            }}\r\n        >\r\n            <CircularProgress style={{  color: 'white' }}/>   \r\n        </Backdrop> \r\n    </div>\r\n) ","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport {PRODUCT_STATUSES, STATUS_ACTIONS} from './enum/ProductStatusEnum';\r\nimport {USER_TYPES} from './enum/UsersEnum';\r\n\r\nimport ProductBatchForm from './ProductBatchForm';\r\nimport ProductDetails from './ProductDetails';\r\nimport PerformStatusAction from './PerformStatusAction';\r\nimport BatchTable from './BatchTable';\r\nimport ToastMessage from \"./ToastMessage\";\r\nimport TabPanel from \"./TabPanel\";\r\nimport ErrorBoundary from \"./ErrorBoundary\";\r\n\r\nimport { CircularPageLoader } from \"./static/CircularPageLoader\";\r\n\r\nimport \"../css/App.css\";\r\n\r\nconst cols = [\r\n  { field: \"productID\", title: \"Product ID\", numeric: true, align: \"left\" },\r\n  { field: \"productName\", title: \"Product Name\", numeric: false, align: \"left\" },\r\n  { field: \"productStatus\", title: \"Status\", numeric: false, align: \"left\" },\r\n  { field: \"action\", title: \"Action\", numeric: false, align: \"center\" },\r\n  { field: \"productDesc\", title: \"Additional Details\", numeric: false, align: \"center\" },\r\n];\r\n\r\n/**\r\n * Renders the main page - Product Batches, for registered users.\r\n * Handles toggling child components and interacts with the contracts to fetch product details.\r\n * \r\n * @author syuki\r\n */\r\nexport default class Home extends React.Component {\r\n\r\n    state = { \r\n        tabValue: 0,\r\n        dataKey: null, \r\n        showAddBatch: false,\r\n        showConfirmAction: false,\r\n        showBatchDetails: false,\r\n        showLoader: false,\r\n        productRow: null,\r\n        actionState: null,\r\n        productId: null,\r\n        transactionSuccess: null,\r\n        retailerDataKey: null,\r\n        isAuthenticated: null,\r\n        addressZero: \"0x0000000000000000000000000000000000000000\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { drizzle } = this.props;\r\n        const contract = drizzle.contracts.SupplyChainLifecycle;\r\n        const key = contract.methods.getAllProductDetails.cacheCall();\r\n        this.setState({ dataKey: key });\r\n    }\r\n\r\n    getLifeCycleContract() {\r\n        const { SupplyChainLifecycle } = this.props.drizzleState.contracts;\r\n        return SupplyChainLifecycle;\r\n    }\r\n\r\n    disableActionButton(action){\r\n        let disable = false;\r\n        if(action != null){\r\n            switch(action) {\r\n                case STATUS_ACTIONS[7]:\r\n                    disable = true;\r\n                    break;\r\n            }\r\n        }\r\n        return disable;\r\n    }\r\n\r\n    //Maps available actions based on product statuses for each user type.\r\n    fetchProductStatusActions(productDetails){\r\n        let statusAction = STATUS_ACTIONS[productDetails[\"productStatus\"]];\r\n        if(this.props.userType == USER_TYPES[0]){\r\n            if(productDetails[\"productStatus\"] > 0){\r\n                statusAction = STATUS_ACTIONS[7];\r\n            }\r\n        }\r\n        if(this.props.userType == USER_TYPES[1]){\r\n            if(productDetails[\"productStatus\"] == 2){\r\n                statusAction = STATUS_ACTIONS[5];\r\n            }\r\n            else if(productDetails[\"productStatus\"] == 6 \r\n                && productDetails[\"retailerAddresses\"] == this.state.addressZero){\r\n                statusAction = STATUS_ACTIONS[2];\r\n            } else if(productDetails[\"productStatus\"] > 2){\r\n                statusAction = STATUS_ACTIONS[7];\r\n            }\r\n        }\r\n        if(this.props.userType == USER_TYPES[2]){\r\n            if(productDetails[\"productStatus\"] == 4\r\n                && productDetails[\"retailerAddresses\"] != this.state.addressZero){\r\n                statusAction = STATUS_ACTIONS[5];\r\n            } else if (productDetails[\"productStatus\"] == 6 \r\n                        && productDetails[\"retailerAddresses\"] != this.state.addressZero){\r\n                statusAction = STATUS_ACTIONS[4];\r\n            } else if (productDetails[\"productStatus\"] == 5){\r\n                statusAction = STATUS_ACTIONS[6];\r\n            } else if(productDetails[\"productStatus\"] > 6) {\r\n                statusAction = STATUS_ACTIONS[7];\r\n            }\r\n        }\r\n        return statusAction;\r\n    }\r\n\r\n    //Maps the required product statuses for each user type.\r\n    fetchProductStatuses(productDetails) {\r\n        let productStatuses = PRODUCT_STATUSES[productDetails[\"productStatus\"]];\r\n        //Abstracts all statuses after payment to SOLD. \r\n        if(this.props.userType == USER_TYPES[0]){\r\n            if(productDetails[\"productStatus\"] > 2) {\r\n                productStatuses = PRODUCT_STATUSES[7];\r\n            }\r\n        }\r\n        if(this.props.userType == USER_TYPES[1]){\r\n            //Manages payment statuses - PAID and SOLD, depending on the user type.\r\n            if(productDetails[\"productStatus\"] == 6 \r\n                && productDetails[\"retailerAddresses\"] == this.state.addressZero){\r\n                productStatuses = PRODUCT_STATUSES[6];\r\n            } \r\n            //Abstracts all statuses after payment to SOLD. \r\n            else if(productDetails[\"productStatus\"] > 4 \r\n                && productDetails[\"retailerAddresses\"] != this.state.addressZero){\r\n                productStatuses = PRODUCT_STATUSES[7];\r\n            }\r\n        }\r\n        return productStatuses;\r\n    }\r\n\r\n    convertToDecimal(number) {\r\n        return number/100;\r\n    }\r\n\r\n    getProductDetails(contractName) {\r\n        const productDetailsArray = contractName.getAllProductDetails[this.state.dataKey];\r\n        let rows = [];\r\n        if(productDetailsArray && productDetailsArray.value.length > 0){\r\n            productDetailsArray.value.forEach(productDetails => {\r\n                const status = this.fetchProductStatuses(productDetails);\r\n                const action = this.fetchProductStatusActions(productDetails);\r\n                const newRow = {\r\n                    productId: productDetails[\"productId\"],\r\n                    productName: productDetails[\"productName\"], \r\n                    productDesc: productDetails[\"productDesc\"], \r\n                    productPrice: this.convertToDecimal(productDetails[\"productPrice\"]),\r\n                    productQuantity: productDetails[\"productQuantity\"],\r\n                    consumerAddress: productDetails[\"consumerAddress\"], \r\n                    currentUser: productDetails[\"currentStatusUser\"], \r\n                    distributorAddress: productDetails[\"distributorAddress\"],\r\n                    producerAddress: productDetails[\"producerAddress\"],\r\n                    retailerAddresses: productDetails[\"retailerAddresses\"],\r\n                    productStatus: status,\r\n                    action: action,\r\n                    disableActionButton: this.disableActionButton(action)\r\n                };\r\n                rows.push(newRow);\r\n            });\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    fetchActiveBatches(rows) {\r\n        //Non-active batches for producers = Sold batches. \r\n        if(this.props.userType == USER_TYPES[0]){\r\n            return rows.filter((row) => row.productStatus != PRODUCT_STATUSES[7]).reverse();\r\n        }\r\n        //Non-active and unrelated batches for distributor = Sold batches and batches yet to be \r\n        //enabled for pickup. \r\n        if(this.props.userType == USER_TYPES[1]){\r\n            return rows.filter((row) => row.productStatus != PRODUCT_STATUSES[0] \r\n                                        && row.productStatus != PRODUCT_STATUSES[7]).reverse();\r\n        }\r\n        //Non-active and unrelated batches for retailer = Sold batches and batches yet to be \r\n        //released for shipping. \r\n        if(this.props.userType == USER_TYPES[2]){\r\n            return rows.filter((row) => row.productStatus != PRODUCT_STATUSES[0]\r\n                                        && row.productStatus != PRODUCT_STATUSES[1]\r\n                                        && row.productStatus != PRODUCT_STATUSES[2]\r\n                                        && row.productStatus != PRODUCT_STATUSES[7]).reverse();\r\n        }\r\n        return rows.filter((row) => !row.disableActionButton).reverse();\r\n    }\r\n\r\n    //Filters all the sold batches for all of the user types.\r\n    fetchPreviousBatches(rows) {\r\n        return rows.filter((row) => row.productStatus == PRODUCT_STATUSES[7]).reverse();\r\n    }\r\n\r\n    showAddBatchPopUp() {\r\n        this.setState({\r\n            showAddBatch: true\r\n        });\r\n    }\r\n\r\n    hideAddBatchPopUp() {\r\n        this.setState({\r\n            showAddBatch: false\r\n        });\r\n    }\r\n\r\n    showConfirmActionPopUp(action, prodId) {\r\n        this.setState({\r\n            showConfirmAction: true,\r\n            actionState: action,\r\n            productId: prodId\r\n        });\r\n    }\r\n\r\n    hideConfirmActionPopUp(action, prodId) {\r\n        this.setState({\r\n            showConfirmAction: false\r\n        });\r\n    }\r\n\r\n    toggleBatchDetailsPopUp(prodRow) {\r\n        this.setState({\r\n            showBatchDetails: !this.state.showBatchDetails,\r\n            productRow: prodRow\r\n        });\r\n    }\r\n\r\n    showLoader(){\r\n        this.setState({\r\n            showLoader: true\r\n        });\r\n    }\r\n\r\n    hideLoader(){\r\n        this.setState({\r\n            showLoader: false\r\n        });\r\n    }\r\n\r\n    setTransactionSuccess(status){\r\n        this.setState({ transactionSuccess: status});\r\n    }\r\n\r\n    closeToastMessage(){\r\n        this.setState({ transactionSuccess: null});\r\n    }\r\n\r\n    handleTabChange(event, newTabValue){\r\n        this.setState({ tabValue: newTabValue })\r\n    }\r\n\r\n    fetchEmptyTableString(){\r\n        let string = \"No batches available yet. \";\r\n        if(this.props.userType == USER_TYPES[0]){\r\n            string+=\"Try producing a batch.\";\r\n        } else {\r\n            string = \"No batches available for buying yet.\";\r\n        }\r\n        return string;\r\n    }\r\n\r\n    render() {\r\n        if(this.props.isAuthenticated || this.props.isSuccessfullyRegistered) {\r\n            //Updates registration state globally to render header and footer.\r\n            this.props.updateAuth(true);\r\n\r\n            //Updates user type for new user registration.\r\n            if(this.props.newUserType){\r\n                this.props.updateUserType(this.props.newUserType);\r\n            }\r\n\r\n            const SupplyChainLifecycle = this.getLifeCycleContract();\r\n            const rows = this.getProductDetails(SupplyChainLifecycle);\r\n            const activeBatches = this.fetchActiveBatches(rows);\r\n            const previousBatches = this.fetchPreviousBatches(rows);\r\n\r\n            return (\r\n                <div className=\"main-body\" color=\"primary\">\r\n                    <Paper className=\"app\" style={{ backgroundColor: \"#92869f63\", minHeight: 600 }} elevation={3}>\r\n                        <AppBar \r\n                            id=\"app-bar\"\r\n                            position=\"static\" \r\n                            elevation={0} \r\n                        >\r\n                            <Tabs \r\n                                variant=\"fullWidth\"\r\n                                value={this.state.tabValue} \r\n                                TabIndicatorProps={{ style: { background: \"#FBFAFA\" } }}\r\n                                onChange={(event, value) => this.handleTabChange(event, value)}\r\n                            >\r\n                                <Tab label=\"View Active Batches\" />\r\n                                <Tab label=\"View Sold Batches\" />\r\n                            </Tabs>\r\n                        </AppBar>\r\n                        \r\n                        <TabPanel value={this.state.tabValue} index={0} count={2}>\r\n                            { this.props.userType == USER_TYPES[0] ? \r\n                            <div>\r\n                                <Button \r\n                                    variant=\"contained\" \r\n                                    color=\"secondary\" \r\n                                    onClick={() => this.showAddBatchPopUp()}>\r\n                                        <AddIcon style={{ paddingRight: \"4px\", paddingTop: \"1px\" }} />Produce a New Batch\r\n                                </Button>                     \r\n                                <br/>\r\n                                <br/>\r\n                            </div>\r\n                                : null\r\n                            }\r\n                            <BatchTable \r\n                                rows={activeBatches} \r\n                                cols={cols} \r\n                                userType={this.props.userType}\r\n                                toggleBatchDetailsPopUp={(prodRow) => this.toggleBatchDetailsPopUp(prodRow)} \r\n                                showConfirmActionPopUp={(action, id) => this.showConfirmActionPopUp(action, id)}\r\n                                emptyRowsMessage= {this.fetchEmptyTableString()}\r\n                            />\r\n                        </TabPanel>\r\n\r\n                        <TabPanel value={this.state.tabValue} index={1} count={2}>\r\n                            <BatchTable \r\n                                rows={previousBatches} \r\n                                cols={cols} \r\n                                toggleBatchDetailsPopUp={(prodRow) => this.toggleBatchDetailsPopUp(prodRow)} \r\n                                showConfirmActionPopUp={(action, id) => this.showConfirmActionPopUp(action, id)}\r\n                                emptyRowsMessage=\"No sold batches yet. Try selling a batch.\"\r\n                            />\r\n                        </TabPanel>\r\n\r\n                        {/* Pop-ups & Toasts*/}\r\n\r\n                        {this.state.showAddBatch ? \r\n                            <ErrorBoundary \r\n                                hideLoaderScreen={() => this.hideLoader()} \r\n                                hideDialog={() => this.hideAddBatchPopUp()}\r\n                                setTransactionSuccess={(status) => this.setTransactionSuccess(status)}\r\n                            >\r\n                                <ProductBatchForm \r\n                                    open={this.state.showAddBatch} \r\n                                    closePopup={() => this.hideAddBatchPopUp()}\r\n                                    contractName={this.props.drizzle.contracts.SupplyChainLifecycle}\r\n                                    currentAddress={this.props.drizzleState.accounts[0]}\r\n                                    showLoaderScreen={() => this.showLoader()}\r\n                                    hideLoaderScreen={() => this.hideLoader()}\r\n                                    setTransactionSuccess={(status) => this.setTransactionSuccess(status)}\r\n                                />\r\n                            </ErrorBoundary>\r\n                            : null\r\n                        }\r\n\r\n                        {this.state.showBatchDetails ? \r\n                            <ProductDetails \r\n                                open={this.state.showBatchDetails} \r\n                                closePopup={() => this.toggleBatchDetailsPopUp()} \r\n                                product={this.state.productRow}/>\r\n                            : null\r\n                        }\r\n\r\n                        {this.state.showConfirmAction ? \r\n                            <ErrorBoundary \r\n                                hideLoaderScreen={() => this.hideLoader()} \r\n                                hideDialog={() => this.hideConfirmActionPopUp()}\r\n                                setTransactionSuccess={(status) => this.setTransactionSuccess(status)}\r\n                            >\r\n                                <PerformStatusAction \r\n                                    open={this.state.showConfirmAction} \r\n                                    closePopup={() => this.hideConfirmActionPopUp()} \r\n                                    contractName={this.props.drizzle.contracts.SupplyChainLifecycle}\r\n                                    action={this.state.actionState}\r\n                                    productId={this.state.productId}\r\n                                    currentAddress={this.props.drizzleState.accounts[0]}\r\n                                    showLoaderScreen={() => this.showLoader()}\r\n                                    hideLoaderScreen={() => this.hideLoader()}\r\n                                    setTransactionSuccess={(status) => this.setTransactionSuccess(status)}\r\n                                />\r\n                            </ErrorBoundary>\r\n                            : null\r\n                        }\r\n\r\n                        {this.state.transactionSuccess ? \r\n                            <ToastMessage \r\n                                open={this.state.transactionSuccess} \r\n                                toastMessage=\"Transaction successful!\"\r\n                                closeToastMessage={() => this.closeToastMessage()}\r\n                                bgColor='#9986af'\r\n                            />\r\n                            : null\r\n                        }\r\n                        {this.state.transactionSuccess === false ? \r\n                            <ToastMessage \r\n                                open={this.state.transactionSuccess === false} \r\n                                toastMessage=\"Transaction failed! Please check your connection and try again.\"\r\n                                bgColor='#eb535e'\r\n                                closeToastMessage={() => this.closeToastMessage()}\r\n                            />\r\n                            : null\r\n                        }\r\n                \r\n                        <CircularPageLoader \r\n                            open={this.state.showLoader} \r\n                        />\r\n                        \r\n                    </Paper>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <Navigate to=\"/new-user\" replace />;\r\n        }\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Home from \"../Home\";\r\n\r\n/**\r\n * Wrapper component for home page to use certain hooks.\r\n * \r\n * @author syuki\r\n */\r\nconst HomeWrapper = props => {\r\n    //Checks for registration status received through navigate() right after\r\n    //new user's successful registration. \r\n    const location = useLocation();\r\n    if(location.state != null && location.state.auth != null) {\r\n        return <Home isSuccessfullyRegistered={location.state.auth} newUserType={location.state.userType} {...props} /> \r\n    }\r\n    return <Home isSuccessfullyRegistered={null} newUserType={null} {...props} /> \r\n}\r\n\r\nexport default HomeWrapper;","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { USER_TYPES } from \"./enum/UsersEnum\";\r\n\r\nimport \"../css/NewUser.css\";\r\n\r\n/**\r\n * Provides account types to users for address registration -\r\n *  - Producers, \r\n *  - Distributors, \r\n *  - Retailers.\r\n * \r\n * @author syuki\r\n */\r\nconst Register = ({drizzle, drizzleState, isAuthenticated}) => {\r\n\r\n    const navigate = useNavigate();\r\n    const accountAddress = drizzleState.accounts[0];\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated){\r\n        navigate('/');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"new-user-body\">\r\n            <Backdrop open className=\"backdrop-design\">\r\n                <Paper elevation={0} className=\"new-user-paper\">\r\n                    <IconButton color=\"inherit\">\r\n                        <ArrowBackIosIcon fontSize=\"large\" aria-label=\"back\" onClick={() => navigate(-1)} />\r\n                    </IconButton>\r\n                    <center>\r\n                        <Typography component=\"h1\" variant=\"h5\" style={{ fontWeight: \"500\" }}>Register</Typography>\r\n                        <p>Choose your account type for the address <b>{accountAddress}</b></p>\r\n                        <Grid \r\n                            container \r\n                            color=\"secondary\" \r\n                            justifyContent=\"center\" \r\n                            direction={'column'} \r\n                            spacing={2}\r\n                        >\r\n                            <Grid item xs={12}>\r\n                                <Tooltip arrow title=\"Create batches of various products.\" placement=\"right\">\r\n                                    <Button style={{ width: 200 }}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className=\"nf-button\"\r\n                                        onClick={() => navigate(\"/confirm-registration\", {\r\n                                            state: {\r\n                                                type: USER_TYPES[0]\r\n                                            }\r\n                                        })}\r\n                                    >\r\n                                        Producer\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Tooltip arrow title=\"Buy batches from producer and sell to retailer.\" placement=\"right\">\r\n                                    <Button style={{ width: 200 }}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className=\"nf-button\"\r\n                                        onClick={() => navigate(\"/confirm-registration\", {\r\n                                            state: {\r\n                                                type: USER_TYPES[1]\r\n                                            }\r\n                                        })}\r\n                                    >\r\n                                        Distributor\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Tooltip arrow title=\"Buy batches from distributor and sell to consumers.\" placement=\"right\">\r\n                                    <Button style={{ width: 200, marginBottom: 30 }}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className=\"button\"\r\n                                        onClick={() => navigate(\"/confirm-registration\", {\r\n                                            state: {\r\n                                                type: USER_TYPES[2]\r\n                                            }\r\n                                        })}\r\n                                    >\r\n                                        Retailer\r\n                                    </Button>\r\n                                </Tooltip>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider style={{ marginBottom: 20 }} />\r\n                        {/* social media */}\r\n                        <Grid container justifyContent=\"center\">\r\n                                <Grid item xs={2}>\r\n                                    {/* <Link className=\"ModalLink\" href=\"https://github.com/Shira98\" target=\"_blank\" >{\" \"}<GitHubIcon /></Link> */}\r\n                                </Grid>\r\n                                <Grid item xs={1}> \r\n                                    {/* <Link className=\"ModalLink\" href=\"https://twitter.com/d_praneetha\" target=\"_blank\" >{\" \"}<TwitterIcon /></Link> */}\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Link className=\"ModalLink\"  target=\"_blank\">{\"   \"}\r\n                                        \r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <br/>\r\n                             <Link className=\"ModalLink\" href=\"https://mui.com/\" target=\"_blank\" ></Link>\r\n                            <Link className=\"ModalLink\" href=\"https://reactjs.org/\" target=\"_blank\" \r\n                            > {\" \"}</Link>   \r\n                    </center>\r\n                </Paper>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n };\r\n\r\n export default Register;","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { CircularPageLoader } from \"./static/CircularPageLoader\";\r\n\r\nimport { USER_TYPES } from \"./enum/UsersEnum\";\r\n\r\nimport \"../css/NewUser.css\";\r\n\r\n/**\r\n * Renders the registration confirmation page for new addresses.\r\n * \r\n * @author syuki\r\n */\r\nconst ConfirmRegistration = ({drizzle, drizzleState, isAuthenticated}) => {\r\n\r\n    const [showLoader, setShowLoader] = useState();\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated){\r\n            navigate('/');\r\n        }\r\n    }, []);\r\n\r\n    function getContractMethod() {\r\n        let method = null;\r\n        switch(location.state.type) {\r\n            case USER_TYPES[0]:\r\n                method = drizzle.contracts.SupplyChainLifecycle.methods[\"addProducer\"];\r\n                break;\r\n            case USER_TYPES[1]:\r\n                method = drizzle.contracts.SupplyChainLifecycle.methods[\"addDistributor\"];\r\n                break;   \r\n            case USER_TYPES[2]:\r\n                method = drizzle.contracts.SupplyChainLifecycle.methods[\"addRetailer\"];\r\n                break; \r\n        }\r\n        return method;\r\n    }\r\n\r\n    function addNewUser() {\r\n        setShowLoader(true);\r\n        const contractMethod = getContractMethod();\r\n        contractMethod(drizzleState.accounts[0])\r\n        .send(\r\n            {\r\n                from: drizzleState.accounts[0],\r\n                gas: 1000000\r\n            } \r\n        )\r\n        .then((receipt) => {\r\n            console.log(receipt);\r\n            setShowLoader(false);\r\n            navigate(\"/registration-success\", {\r\n                state: {\r\n                    userType: location.state.type\r\n                }\r\n              });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            setShowLoader(false);\r\n            navigate(\"/registration-failure\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-user-body\">\r\n            <Backdrop open className=\"backdrop-design\">\r\n                <Paper elevation={0} className=\"new-user-paper\">\r\n                    <IconButton color=\"inherit\">\r\n                        <ArrowBackIosIcon fontSize=\"large\" aria-label=\"back\" onClick={() => navigate(-1)} />\r\n                    </IconButton>\r\n                    <center>\r\n                        <Typography component=\"h1\" variant=\"h5\" style={{ fontWeight: \"500\" }}>Confirm registration as '{location.state? location.state.type : null}'?</Typography>\r\n                        <p>By clicking on confirm, you agree to our terms and conditions as well. <br/> \r\n                        Please read our terms and conditions here.</p>\r\n                        <Button style={{ width: 200, marginBottom: 30 }}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className=\"confirm-button\"\r\n                                onClick={addNewUser}\r\n                            >\r\n                            Confirm\r\n                        </Button>\r\n                        <Divider style={{ marginBottom: 20 }} />\r\n                        {/* social media */}\r\n                        <Grid container justifyContent=\"center\">\r\n                                <Grid item xs={2}>\r\n                                    {/* <Link className=\"ModalLink\" href=\"https://github.com/Shira98\" target=\"_blank\" >{\" \"}<GitHubIcon /></Link> */}\r\n                                </Grid>\r\n                                <Grid item xs={1}> \r\n                                    {/* <Link className=\"ModalLink\" href=\"https://twitter.com/d_praneetha\" target=\"_blank\" >{\" \"}<TwitterIcon /></Link> */}\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Link className=\"ModalLink\"  target=\"_blank\">{\"   \"}\r\n                                        \r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <br/>\r\n                             <Link className=\"ModalLink\" href=\"https://mui.com/\" target=\"_blank\" ></Link> \r\n                            <Link className=\"ModalLink\" href=\"https://reactjs.org/\" target=\"_blank\" \r\n                            > {\" \"}</Link> \r\n                    </center>\r\n                </Paper>\r\n            </Backdrop>\r\n            <CircularPageLoader \r\n                open={showLoader} \r\n            />\r\n        </div>\r\n    );\r\n };\r\n\r\n export default ConfirmRegistration;","import React from \"react\"; \r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\n\r\nimport \"../css/Profile.css\";\r\n\r\n/**\r\n * Component for the profile page. Fetches profile details from the registered user's account.\r\n * \r\n * @author syuki\r\n */\r\nexport default ({ drizzle, drizzleState, userType, close, open, anchorEl, profilePicturePath }) => {\r\n    \r\n    return(\r\n        <Menu\r\n                className=\"profile-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                disableScrollLock={true}\r\n                PaperProps={{\r\n                    style: {\r\n                        transform: 'translateX(-10px) translateY(60px)',\r\n                        padding: \"10px 30px 20px 30px\"\r\n                    }\r\n                }}\r\n                open={open}\r\n                onClose={close}\r\n        >\r\n            <div>\r\n                <center>\r\n                    <img className=\"profile-picture\" src={profilePicturePath} alt=\"profile picture\" />\r\n                    <br/>\r\n                    <Button \r\n                        variant=\"outlined\" \r\n                        style={{ color: \"#03989E\", borderColor: \"#03989E\" }}\r\n                        disabled={true}>\r\n                        {userType}\r\n                    </Button>\r\n                </center>\r\n                <br/>\r\n                <div className=\"profile-details\">\r\n                    <div style={{ paddingBottom: \"24px\" }}>\r\n                        <h4>Account Address</h4> \r\n                        <p>{drizzleState.accounts[0]}</p>\r\n                    </div>\r\n                    <div>\r\n                        <h4>Account Balance</h4> \r\n                        <p>{drizzleState.accountBalances[drizzleState.accounts[0]]} <b>wei</b></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Menu>\r\n    );\r\n};","import React, { useState } from 'react';  \r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';  \r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nimport { USER_TYPES } from '../enum/UsersEnum';\r\n\r\nimport Profile from '../Profile';\r\n\r\nimport '../../css/App.css';\r\n\r\n/**\r\n * Header component. Present in every page when user is an authenticated one.\r\n * \r\n * @author syuki\r\n */\r\nexport default function Header({isAuthenticated, userType, drizzle, drizzleState}) {\r\n\r\n    const [showProfile, setShowProfile] = useState();\r\n    const [anchorEl, setAnchorEl] = useState();\r\n    const [profilePicture, setProfilePicture] = useState();\r\n\r\n    function toggleProfile(event) {\r\n        let profilePicturePath = \"/profile-designs/Producer.png\";\r\n        if(userType == USER_TYPES[1]){\r\n            profilePicturePath = \"/profile-designs/Distributor.png\";\r\n        } \r\n        if(userType == USER_TYPES[2]){\r\n            profilePicturePath = \"/profile-designs/Retailer.png\";\r\n        } \r\n        setProfilePicture(profilePicturePath);\r\n        setShowProfile(!showProfile);\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    if(!isAuthenticated){\r\n        return null;\r\n    } else {\r\n        return(\r\n            <div> \r\n                <AppBar position=\"static\" color=\"secondary\" elevation={0}>\r\n                    <Toolbar> \r\n                        <NavLink exact to=\"/\" className=\"undecorated-links\"> \r\n                            <IconButton color=\"inherit\">\r\n                                <img src=\"/bscm_light_circle.png\" alt=\"logo\" id=\"app-logo-header\"/>\r\n                            </IconButton>\r\n                        </NavLink>\r\n                        <NavLink exact to=\"/\" className=\"undecorated-links iconbutton\"> \r\n                            <IconButton color=\"inherit\">\r\n                                <Typography noWrap>VIEW BATCHES</Typography>  \r\n                            </IconButton>\r\n                        </NavLink>\r\n                        <IconButton color=\"inherit\" id=\"right-anchored-menu-item\" onClick={toggleProfile}>\r\n                            <AccountCircle style={{ fontSize: 40 }}/> \r\n                            <ArrowDropDownIcon className=\"dropdown-arrow-icon\" />\r\n                        </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                {showProfile ? \r\n                    <Profile \r\n                        open={showProfile} \r\n                        close={toggleProfile}\r\n                        userType={userType} \r\n                        drizzle={drizzle} \r\n                        drizzleState={drizzleState}\r\n                        anchorEl={anchorEl}\r\n                        profilePicturePath={profilePicture}\r\n                    />\r\n                    : null\r\n                }   \r\n            </div>\r\n        );\r\n    }\r\n};\r\n","import React from \"react\"; \r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\n\r\nimport \"../../css/Footer.css\"; \r\n \r\n/**\r\n * Footer component. Present in every page when user is an authenticated one.\r\n * \r\n * @author syuki\r\n */\r\nexport default function Footer({isAuthenticated}) {\r\n    if(!isAuthenticated){\r\n        return null;\r\n    } else {\r\n        return(\r\n            <div>\r\n                <center>\r\n                    <footer>\r\n                        <Container maxWidth=\"sm\" > \r\n                            <Typography variant=\"body1\" style={{ fontSize: 13}}> \r\n                            <div className=\"AppFooter\">\r\n                                {/* social media */}\r\n                                <Grid container justifyContent=\"center\">\r\n                                    <Grid item xs={2}>\r\n                                        {/* <Link className=\"FooterLink\" href=\"https://github.com/Shira98\" target=\"_blank\" >{\" \"}<GitHubIcon /></Link> */}\r\n                                    </Grid>\r\n                                    <Grid item xs={1}> \r\n                                        {/* <Link className=\"FooterLink\" href=\"https://twitter.com/d_praneetha\" target=\"_blank\" >{\" \"}<TwitterIcon /></Link> */}\r\n                                    </Grid>\r\n                                    <Grid item xs={2}>\r\n                                        <Link className=\"FooterLink\"  target=\"_blank\">{\"   \"}\r\n                                           \r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <br/>\r\n                                <Link className=\"FooterLink\" href=\"https://mui.com/\" target=\"_blank\" ></Link> \r\n                                <Link className=\"FooterLink\" href=\"https://reactjs.org/\" target=\"_blank\" \r\n                                > {\" \"}</Link>  \r\n                                </div>\r\n                            </Typography> \r\n                        </Container>\r\n                    </footer>\r\n                </center>\r\n            </div>\r\n        );\r\n    } \r\n};\r\n","import React from \"react\"; \r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport '../../css/NotFound.css';\r\n\r\n/**\r\n * Component for a customized 404 page.\r\n * \r\n * @author syuki\r\n */\r\nconst NotFound = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return(\r\n        <div className=\"main-body not-found\" color=\"primary\">\r\n            <img src=\"/404.png\" alt=\"404\"/>\r\n            <h2>Oops! Looks like the page you're looking for doesn't exist.</h2>\r\n            <Grid container justifyContent=\"center\">\r\n                <Grid item xs={3} style={{ marginBottom: 20 }}>\r\n                    <Button variant=\"outlined\" className=\"nf-button\" onClick={() => navigate(-1)}>Go Back</Button>\r\n                </Grid>\r\n                <Grid item xs={3} style={{ marginBottom: 20 }}>\r\n                    <Button variant=\"outlined\" className=\"nf-button\" onClick={() => navigate(\"/\")}>Go Home</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport \"../../css/NewUser.css\";\r\n\r\n/**\r\n * Prompts unregistered users to sign-up.\r\n * Unregistered users can sign up as producers, distributors, retailers here.\r\n * \r\n * @author syuki\r\n */\r\nconst NewUser = ({isAuthenticated}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated){\r\n        navigate('/');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"new-user-body\">\r\n            <Backdrop open className=\"backdrop-design\">\r\n                <Paper elevation={0} className=\"new-user-paper\">\r\n                    <center>\r\n                        <LockIcon fontSize=\"large\" aria-label=\"back\" style={{ fontSize: 50 }} />\r\n                    </center>\r\n                    <center>\r\n                        <br/>\r\n                        <Typography component=\"h1\" variant=\"h5\" style={{ fontWeight: \"500\" }}>New Here?</Typography>\r\n                        <p>We noticed the address you're currently using is not registered with us. \r\n                        Please switch to an existing user address or register this address to use \r\n                        this application.</p>\r\n                        <Button style={{ width: 200, marginBottom: 30 }}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className=\"nf-button\"\r\n                                onClick={() => navigate(\"/register\")}\r\n                            >\r\n                                I'd like to register\r\n                        </Button>\r\n                        <Divider style={{ marginBottom: 20 }} />\r\n                        {/* social media */}\r\n                        <Grid container justifyContent=\"center\">\r\n                            <Grid item xs={2}>\r\n                                {/* <Link className=\"ModalLink\" href=\"https://github.com/Shira98\" target=\"_blank\" >{\" \"}<GitHubIcon /></Link> */}\r\n                            </Grid>\r\n                            <Grid item xs={1}> \r\n                                {/* <Link className=\"ModalLink\" href=\"https://twitter.com/d_praneetha\" target=\"_blank\" >{\" \"}<TwitterIcon /></Link> */}\r\n                            </Grid>\r\n                            <Grid item xs={2}>\r\n                                <Link className=\"ModalLink\"  target=\"_blank\">{\"   \"}\r\n                                    \r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <br/>\r\n                         <Link className=\"ModalLink\" href=\"https://mui.com/\" target=\"_blank\" ></Link>\r\n                        <Link className=\"ModalLink\" href=\"https://reactjs.org/\" target=\"_blank\" \r\n                        > {\" \"}</Link> \r\n                    </center>\r\n                </Paper>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n };\r\n\r\n export default NewUser;","import React, { useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport \"../../css/NewUser.css\";\r\n\r\n/**\r\n * Renders upon successful registration. \r\n * Redirects to the home page after delay.\r\n * \r\n * @author syuki\r\n */\r\nconst RegistrationSuccess = ({isAuthenticated}) => {\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated){\r\n        navigate('/');\r\n        }\r\n    }, []);\r\n\r\n    //Sends out registration status to the redirected home page.  \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n        navigate('/', {\r\n            state: {\r\n                auth: true,\r\n                userType: location.state.userType\r\n            }\r\n          })\r\n        }, 5000)\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"new-user-body\">\r\n            <Backdrop open className=\"backdrop-design\">\r\n                <Paper elevation={0} className=\"new-user-paper\">\r\n                    <center>\r\n                        <Typography style={{ paddingTop: 30, fontWeight: \"500\" }} component=\"h1\" variant=\"h5\">Successfully Registered!</Typography>\r\n                        <CheckCircleOutlineOutlinedIcon style = {{ paddingTop: 40, fontSize: 200, color: \"#2D323F\"}} \r\n                            aria-label=\"success tick\" />\r\n                        <p style={{ paddingBottom: \"0\" }}>Redirecting to home page.</p>\r\n                        <p style={{ fontSize: 12, paddingTop: 0 }}>Please <Link className=\"ModalLink\" href=\"/\">click here</Link> if you're not redirected automatically.</p>\r\n                        <Divider style={{ marginBottom: 20 }} />\r\n                        {/* social media */}\r\n                        <Grid container justifyContent=\"center\">\r\n                                <Grid item xs={2}>\r\n                                    {/* <Link className=\"ModalLink\" href=\"https://github.com/Shira98\" target=\"_blank\" >{\" \"}<GitHubIcon /></Link> */}\r\n                                </Grid>\r\n                                <Grid item xs={1}> \r\n                                    {/* <Link className=\"ModalLink\" href=\"https://twitter.com/d_praneetha\" target=\"_blank\" >{\" \"}<TwitterIcon /></Link> */}\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Link className=\"ModalLink\"  target=\"_blank\">{\"   \"}\r\n                                        \r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <br/>\r\n                             <Link className=\"ModalLink\" href=\"https://mui.com/\" target=\"_blank\" ></Link> \r\n                            <Link className=\"ModalLink\" href=\"https://reactjs.org/\" target=\"_blank\" \r\n                            > {\" \"}</Link>   \r\n                    </center>\r\n                </Paper>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n };\r\n\r\n export default RegistrationSuccess;","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport \"../../css/NewUser.css\";\r\n\r\n/**\r\n * Renders upon failed registration. \r\n * Redirects to the sign-up page after delay.\r\n * \r\n * @author syuki\r\n */\r\nconst RegistrationFailure = ({isAuthenticated}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if(isAuthenticated){\r\n            navigate('/');\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n        navigate('/new-user')\r\n        }, 5000)\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"new-user-body\">\r\n            <Backdrop open className=\"backdrop-design\">\r\n                <Paper elevation={0} className=\"new-user-paper\">\r\n                    <center>\r\n                        <Typography style={{ paddingTop: 30, fontWeight: \"500\" }} component=\"h1\" variant=\"h5\">Registration Failed!</Typography>\r\n                        <CancelOutlinedIcon style = {{ paddingTop: 40, fontSize: 200, color: \"#2D323F\"}} \r\n                            aria-label=\"success tick\" />\r\n                        <p style={{ paddingBottom: \"0\" }}>Please try to register again after some time. Redirecting to registration page.</p>\r\n                        <p style={{ fontSize: 12, padding: 0 }}>Please <Link className=\"ModalLink\" href=\"/new-user\">click here</Link> if you're not redirected automatically.</p>\r\n                        <p style={{ fontSize: 12, padding: \"0\" }}>Contact us if the issue persists.</p>\r\n                        <Divider style={{ marginBottom: 20 }} />\r\n                        {/* social media */}\r\n                        <Grid container justifyContent=\"center\">\r\n                                <Grid item xs={2}>\r\n                                    {/* <Link className=\"ModalLink\" href=\"https://github.com/Shira98\" target=\"_blank\" >{\" \"}<GitHubIcon /></Link> */}\r\n                                </Grid>\r\n                                <Grid item xs={1}> \r\n                                    {/* <Link className=\"ModalLink\" href=\"https://twitter.com/d_praneetha\" target=\"_blank\" >{\" \"}<TwitterIcon /></Link> */}\r\n                                </Grid>\r\n                                <Grid item xs={2}>\r\n                                    <Link className=\"ModalLink\"  target=\"_blank\">{\"   \"}\r\n                                        \r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <br/>\r\n                             <Link className=\"ModalLink\" href=\"https://mui.com/\" target=\"_blank\" ></Link> \r\n                            <Link className=\"ModalLink\" href=\"https://reactjs.org/\" target=\"_blank\" \r\n                            > {\" \"}</Link>  \r\n                    </center>\r\n                </Paper>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n };\r\n\r\n export default RegistrationFailure;","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n\r\nimport HomeWrapper from \"./wrapper/HomeWrapper\";\r\n\r\nimport Register from \"./Register\";\r\nimport ConfirmRegistration from \"./ConfirmRegistration\";\r\n\r\nimport Header from \"./static/Header\";\r\nimport Footer from \"./static/Footer\";\r\nimport { CircularPageLoader } from \"./static/CircularPageLoader\";\r\nimport NotFound from \"./static/NotFound\";\r\nimport NewUser from \"./static/NewUser\";\r\nimport RegistrationSuccess from \"./static/RegistrationSuccess\";\r\nimport RegistrationFailure from \"./static/RegistrationFailure\";\r\n\r\nimport { USER_TYPES } from \"./enum/UsersEnum\";\r\n\r\nimport \"../css/App.css\";\r\n\r\n/**\r\n * Includes conditional application routing and user registration logic after app initialization.\r\n * \r\n * @author syuki\r\n */\r\nexport const InitializedContent = ({drizzle, drizzleState}) => {\r\n\r\n    const [isAuth, setIsAuth] = useState();\r\n    const [userType, setUserType] = useState();\r\n\r\n    const contract = drizzle.contracts.SupplyChainLifecycle;\r\n\r\n    //If the user is registered as at least one role, they're allowed access to the application content.\r\n    useEffect(() => {\r\n        let retailerResult = null;\r\n        let producerResult = null;\r\n\r\n        contract.methods.isRetailer().call().then((receipt) => {\r\n                    console.log(receipt);\r\n                    retailerResult = receipt;\r\n                    if(receipt){\r\n                        setUserType(USER_TYPES[2]);\r\n                    }\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                    retailerResult = false;\r\n                });\r\n        contract.methods.isProducer().call().then((receipt) => {\r\n                    console.log(receipt);\r\n                    producerResult = receipt;\r\n                    if(receipt){\r\n                        setUserType(USER_TYPES[0]);\r\n                    }\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                    producerResult = false;\r\n                });\r\n        contract.methods.isDistributor().call().then((receipt) => {\r\n                    console.log(receipt);\r\n                    if(receipt){\r\n                        setUserType(USER_TYPES[1]);\r\n                    }\r\n                    setIsAuth(retailerResult || producerResult || receipt);\r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                    setIsAuth(retailerResult || producerResult || false);\r\n                });\r\n    }, []);\r\n\r\n    function updateIsAuth(newIsAuth){\r\n        setIsAuth(newIsAuth);\r\n    }\r\n\r\n    function updateUserType(newUserType){\r\n        setUserType(newUserType);\r\n    }\r\n\r\n    //Registered users are redirected to the home page, un-registered users go to the sign-up page.\r\n    if(isAuth != undefined) {\r\n        return (\r\n            <Router>\r\n                <Header isAuthenticated={isAuth} userType={userType} drizzle={drizzle} drizzleState={drizzleState} /> \r\n                <div>\r\n                    <Routes>\r\n                        {/* Registered users are redirected to the home page, un-registered users go to the register/sign-up page. */}\r\n                        <Route exact path=\"/new-user\" element={<NewUser isAuthenticated={isAuth} />} /> \r\n                        <Route exact path=\"/register\" element={<Register drizzle={drizzle} drizzleState={drizzleState} isAuthenticated={isAuth} />} /> \r\n                        <Route exact path=\"/confirm-registration\" element={<ConfirmRegistration drizzle={drizzle} drizzleState={drizzleState} isAuthenticated={isAuth} />} />   \r\n                        <Route exact path=\"/registration-success\" element={<RegistrationSuccess isAuthenticated={isAuth} />} />   \r\n                        <Route exact path=\"/registration-failure\" element={<RegistrationFailure isAuthenticated={isAuth} />} />   \r\n                        <Route exact path=\"/\" element={<HomeWrapper drizzle={drizzle} drizzleState={drizzleState} isAuthenticated={isAuth} userType={userType} updateAuth={updateIsAuth} updateUserType={updateUserType} />} /> \r\n                        <Route path=\"*\" element={<NotFound />} />\r\n                    </Routes>\r\n                </div>\r\n                <Footer isAuthenticated={isAuth} />\r\n            </Router>\r\n        );\r\n    } else {\r\n        return (<CircularPageLoader open = \"true\" />);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { DrizzleContext } from \"@drizzle/react-plugin\";\r\nimport { Drizzle } from \"@drizzle/store\";\r\nimport drizzleOptions from \"./drizzleOptions\";\r\n\r\nimport { PageLoader } from \"./components/static/PageLoader\";\r\nimport { InitializedContent } from \"./components/InitializedContent\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nconst drizzle = new Drizzle(drizzleOptions);\r\n\r\n/**\r\n * The main app component. Tha main paths and components are called from here.\r\n * Drizzle initialization state is checked here and is passed down to the child components when required.\r\n * \r\n * @author syuki\r\n */\r\nconst App = () => {\r\n\r\n    return (\r\n        <DrizzleContext.Provider drizzle={drizzle}>\r\n            <DrizzleContext.Consumer>\r\n                {\r\n                    drizzleContext => \r\n                    {\r\n                        const { drizzle, drizzleState, initialized } = drizzleContext;\r\n\r\n                        if (!initialized) {\r\n                            return (<PageLoader />)\r\n                        }\r\n\r\n                        return(<InitializedContent \r\n                                    drizzle={drizzle} \r\n                                    drizzleState={drizzleState} \r\n                                />\r\n                            )\r\n                    }\r\n                }\r\n            </DrizzleContext.Consumer>\r\n        </DrizzleContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n        registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            if (installingWorker == null) {\r\n                return;\r\n            }\r\n            installingWorker.onstatechange = () => {\r\n                if (installingWorker.state === 'installed') {\r\n                    if (navigator.serviceWorker.controller) {\r\n                        // At this point, the updated precached content has been fetched,\r\n                        // but the previous service worker will still serve the older\r\n                        // content until all client tabs are closed.\r\n                        console.log(\r\n                            'New content is available and will be used when all ' +\r\n                            'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                        );\r\n\r\n                        // Execute callback\r\n                        if (config && config.onUpdate) {\r\n                            config.onUpdate(registration);\r\n                        }\r\n                    } else {\r\n                        // At this point, everything has been precached.\r\n                        // It's the perfect time to display a\r\n                        // \"Content is cached for offline use.\" message.\r\n                        console.log('Content is cached for offline use.');\r\n\r\n                        // Execute callback\r\n                        if (config && config.onSuccess) {\r\n                            config.onSuccess(registration);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n            response.status === 404 ||\r\n            (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n            // No service worker found. Probably a different app. Reload the page.\r\n            navigator.serviceWorker.ready.then(registration => {\r\n                registration.unregister().then(() => {\r\n                    window.location.reload();\r\n                });\r\n            });\r\n        } else {\r\n            // Service worker found. Proceed as normal.\r\n            registerValidSW(swUrl, config);\r\n        }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst theme = createTheme({\r\n    typography: {\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n          ].join(','),\r\n    },\r\n    \r\n    palette: {\r\n        background: {\r\n            default: \"#d4ccdd\"\r\n        },\r\n        text: {\r\n            primary: \"#2D323F\",\r\n            secondary: \"#FBFAFA\",\r\n        },\r\n        primary: {\r\n            main: \"#92869F\",\r\n            text: \"black\",\r\n        },\r\n        secondary: {\r\n            main: \"#2D323F\",\r\n            text: \"#FBFAFA\"\r\n        },\r\n        info: {\r\n            main: \"#EDB043\" \r\n        },\r\n        warning: {\r\n            main: \"#938294\"\r\n        } \r\n    }\r\n});\r\n\r\nReactDOM.render(\r\n<ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <App />\r\n</ThemeProvider>, \r\ndocument.getElementById('root'));\r\n\r\nwindow.ethereum.on('accountsChanged',async (accounts) =>{\r\n    window.location.reload(false);\r\n    window.history.replaceState({}, document.title);\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}